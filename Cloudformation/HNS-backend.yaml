AWSTemplateFormatVersion: '2010-09-09'

Resources:
  HNSUserPool:
    Type: AWS::Cognito::UserPool
    Properties:
      UserPoolName: HNSUserPool
      UsernameAttributes:
        - email
      AutoVerifiedAttributes:
        - email

  HNSUserPoolClient:
    Type: AWS::Cognito::UserPoolClient
    Properties:
      UserPoolId: !Ref HNSUserPool
      ClientName: HNSUserPoolClient
      GenerateSecret: false

  HNSDynamoDBTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: HNSMappings
      AttributeDefinitions:
        - AttributeName: HNSName
          AttributeType: S
      KeySchema:
        - AttributeName: HNSName
          KeyType: HASH
      BillingMode: PAY_PER_REQUEST

  HNSBucket:
    Type: AWS::S3::Bucket
    Properties:
      BucketName: hns-user-profiles
      NotificationConfiguration:
        LambdaConfigurations:
          - Event: s3:ObjectCreated:*
            Function: !GetAtt VerifyIDLambda.Arn

  HNSApiGateway:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: HNSApi

  HNSLambdaRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          - Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
            Action: sts:AssumeRole
      Policies:
        - PolicyName: HNSLambdaPolicy
          PolicyDocument:
            Version: '2012-10-17'
            Statement:
              - Effect: Allow
                Action:
                  - dynamodb:*
                  - s3:*
                  - rekognition:*
                Resource: "*"

  RegisterHNSLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: RegisterHNS
      Handler: index.handler
      Role: !GetAtt HNSLambdaRole.Arn
      Code:
        S3Bucket: lambda-code-bucket
        S3Key: register_hns.zip
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref HNSDynamoDBTable

  VerifyIDLambda:
    Type: AWS::Lambda::Function
    Properties:
      FunctionName: VerifyID
      Handler: verify.handler
      Role: !GetAtt HNSLambdaRole.Arn
      Code:
        S3Bucket: lambda-code-bucket
        S3Key: verify_id.zip
      Runtime: nodejs20.x
      Environment:
        Variables:
          TABLE_NAME: !Ref HNSDynamoDBTable
      Events:
        S3Event:
          Type: S3
          Properties:
            Bucket: !Ref HNSBucket
            Events:
              - s3:ObjectCreated:*

  HNSApiGatewayResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      RestApiId: !Ref HNSApiGateway
      ParentId: !GetAtt HNSApiGateway.RootResourceId
      PathPart: register

  HNSApiGatewayMethod:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref HNSApiGateway
      ResourceId: !Ref HNSApiGatewayResource
      HttpMethod: POST
      AuthorizationType: NONE
      Integration:
        Type: AWS_PROXY
        IntegrationHttpMethod: POST
        Uri: !Sub |
          arn:aws:apigateway:${AWS::Region}:lambda:path/2015-03-31/functions/${RegisterHNSLambda.Arn}/invocations

Outputs:
  ApiUrl:
    Description: "URL of the HNS API Gateway"
    Value: !Sub "https://${HNSApiGateway}.execute-api.${AWS::Region}.amazonaws.com/prod/register"
